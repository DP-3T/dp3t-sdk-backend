// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exposed.proto

package org.dpppt.backend.sdk.model.proto;

public final class Exposed {
  private Exposed() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ProtoExposedListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.dpppt.backend.sdk.model.proto.ProtoExposedList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
     */
    java.util.List<org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee> 
        getExposedList();
    /**
     * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
     */
    org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee getExposed(int index);
    /**
     * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
     */
    int getExposedCount();
    /**
     * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
     */
    java.util.List<? extends org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposeeOrBuilder> 
        getExposedOrBuilderList();
    /**
     * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
     */
    org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposeeOrBuilder getExposedOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.dpppt.backend.sdk.model.proto.ProtoExposedList}
   */
  public  static final class ProtoExposedList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.dpppt.backend.sdk.model.proto.ProtoExposedList)
      ProtoExposedListOrBuilder {
    // Use ProtoExposedList.newBuilder() to construct.
    private ProtoExposedList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtoExposedList() {
      exposed_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProtoExposedList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                exposed_ = new java.util.ArrayList<org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee>();
                mutable_bitField0_ |= 0x00000001;
              }
              exposed_.add(
                  input.readMessage(org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          exposed_ = java.util.Collections.unmodifiableList(exposed_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.dpppt.backend.sdk.model.proto.Exposed.internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposedList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.dpppt.backend.sdk.model.proto.Exposed.internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposedList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList.class, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList.Builder.class);
    }

    public static final int EXPOSED_FIELD_NUMBER = 1;
    private java.util.List<org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee> exposed_;
    /**
     * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
     */
    public java.util.List<org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee> getExposedList() {
      return exposed_;
    }
    /**
     * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
     */
    public java.util.List<? extends org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposeeOrBuilder> 
        getExposedOrBuilderList() {
      return exposed_;
    }
    /**
     * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
     */
    public int getExposedCount() {
      return exposed_.size();
    }
    /**
     * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
     */
    public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee getExposed(int index) {
      return exposed_.get(index);
    }
    /**
     * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
     */
    public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposeeOrBuilder getExposedOrBuilder(
        int index) {
      return exposed_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getExposedCount(); i++) {
        if (!getExposed(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < exposed_.size(); i++) {
        output.writeMessage(1, exposed_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < exposed_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, exposed_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList)) {
        return super.equals(obj);
      }
      org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList other = (org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList) obj;

      boolean result = true;
      result = result && getExposedList()
          .equals(other.getExposedList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getExposedCount() > 0) {
        hash = (37 * hash) + EXPOSED_FIELD_NUMBER;
        hash = (53 * hash) + getExposedList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.dpppt.backend.sdk.model.proto.ProtoExposedList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.dpppt.backend.sdk.model.proto.ProtoExposedList)
        org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.dpppt.backend.sdk.model.proto.Exposed.internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposedList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.dpppt.backend.sdk.model.proto.Exposed.internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposedList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList.class, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList.Builder.class);
      }

      // Construct using org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getExposedFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (exposedBuilder_ == null) {
          exposed_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          exposedBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.dpppt.backend.sdk.model.proto.Exposed.internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposedList_descriptor;
      }

      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList getDefaultInstanceForType() {
        return org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList.getDefaultInstance();
      }

      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList build() {
        org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList buildPartial() {
        org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList result = new org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList(this);
        int from_bitField0_ = bitField0_;
        if (exposedBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            exposed_ = java.util.Collections.unmodifiableList(exposed_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.exposed_ = exposed_;
        } else {
          result.exposed_ = exposedBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList) {
          return mergeFrom((org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList other) {
        if (other == org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList.getDefaultInstance()) return this;
        if (exposedBuilder_ == null) {
          if (!other.exposed_.isEmpty()) {
            if (exposed_.isEmpty()) {
              exposed_ = other.exposed_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureExposedIsMutable();
              exposed_.addAll(other.exposed_);
            }
            onChanged();
          }
        } else {
          if (!other.exposed_.isEmpty()) {
            if (exposedBuilder_.isEmpty()) {
              exposedBuilder_.dispose();
              exposedBuilder_ = null;
              exposed_ = other.exposed_;
              bitField0_ = (bitField0_ & ~0x00000001);
              exposedBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExposedFieldBuilder() : null;
            } else {
              exposedBuilder_.addAllMessages(other.exposed_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getExposedCount(); i++) {
          if (!getExposed(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee> exposed_ =
        java.util.Collections.emptyList();
      private void ensureExposedIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          exposed_ = new java.util.ArrayList<org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee>(exposed_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposeeOrBuilder> exposedBuilder_;

      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public java.util.List<org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee> getExposedList() {
        if (exposedBuilder_ == null) {
          return java.util.Collections.unmodifiableList(exposed_);
        } else {
          return exposedBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public int getExposedCount() {
        if (exposedBuilder_ == null) {
          return exposed_.size();
        } else {
          return exposedBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee getExposed(int index) {
        if (exposedBuilder_ == null) {
          return exposed_.get(index);
        } else {
          return exposedBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public Builder setExposed(
          int index, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee value) {
        if (exposedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExposedIsMutable();
          exposed_.set(index, value);
          onChanged();
        } else {
          exposedBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public Builder setExposed(
          int index, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder builderForValue) {
        if (exposedBuilder_ == null) {
          ensureExposedIsMutable();
          exposed_.set(index, builderForValue.build());
          onChanged();
        } else {
          exposedBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public Builder addExposed(org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee value) {
        if (exposedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExposedIsMutable();
          exposed_.add(value);
          onChanged();
        } else {
          exposedBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public Builder addExposed(
          int index, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee value) {
        if (exposedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExposedIsMutable();
          exposed_.add(index, value);
          onChanged();
        } else {
          exposedBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public Builder addExposed(
          org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder builderForValue) {
        if (exposedBuilder_ == null) {
          ensureExposedIsMutable();
          exposed_.add(builderForValue.build());
          onChanged();
        } else {
          exposedBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public Builder addExposed(
          int index, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder builderForValue) {
        if (exposedBuilder_ == null) {
          ensureExposedIsMutable();
          exposed_.add(index, builderForValue.build());
          onChanged();
        } else {
          exposedBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public Builder addAllExposed(
          java.lang.Iterable<? extends org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee> values) {
        if (exposedBuilder_ == null) {
          ensureExposedIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, exposed_);
          onChanged();
        } else {
          exposedBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public Builder clearExposed() {
        if (exposedBuilder_ == null) {
          exposed_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          exposedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public Builder removeExposed(int index) {
        if (exposedBuilder_ == null) {
          ensureExposedIsMutable();
          exposed_.remove(index);
          onChanged();
        } else {
          exposedBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder getExposedBuilder(
          int index) {
        return getExposedFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposeeOrBuilder getExposedOrBuilder(
          int index) {
        if (exposedBuilder_ == null) {
          return exposed_.get(index);  } else {
          return exposedBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public java.util.List<? extends org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposeeOrBuilder> 
           getExposedOrBuilderList() {
        if (exposedBuilder_ != null) {
          return exposedBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(exposed_);
        }
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder addExposedBuilder() {
        return getExposedFieldBuilder().addBuilder(
            org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.getDefaultInstance());
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder addExposedBuilder(
          int index) {
        return getExposedFieldBuilder().addBuilder(
            index, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.getDefaultInstance());
      }
      /**
       * <code>repeated .org.dpppt.backend.sdk.model.proto.ProtoExposee exposed = 1;</code>
       */
      public java.util.List<org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder> 
           getExposedBuilderList() {
        return getExposedFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposeeOrBuilder> 
          getExposedFieldBuilder() {
        if (exposedBuilder_ == null) {
          exposedBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposeeOrBuilder>(
                  exposed_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          exposed_ = null;
        }
        return exposedBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.dpppt.backend.sdk.model.proto.ProtoExposedList)
    }

    // @@protoc_insertion_point(class_scope:org.dpppt.backend.sdk.model.proto.ProtoExposedList)
    private static final org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList();
    }

    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ProtoExposedList>
        PARSER = new com.google.protobuf.AbstractParser<ProtoExposedList>() {
      public ProtoExposedList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ProtoExposedList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProtoExposedList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoExposedList> getParserForType() {
      return PARSER;
    }

    public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposedList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProtoExposeeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.dpppt.backend.sdk.model.proto.ProtoExposee)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes key = 2;</code>
     */
    boolean hasKey();
    /**
     * <code>required bytes key = 2;</code>
     */
    com.google.protobuf.ByteString getKey();

    /**
     * <code>required int64 onset = 3;</code>
     */
    boolean hasOnset();
    /**
     * <code>required int64 onset = 3;</code>
     */
    long getOnset();
  }
  /**
   * Protobuf type {@code org.dpppt.backend.sdk.model.proto.ProtoExposee}
   */
  public  static final class ProtoExposee extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.dpppt.backend.sdk.model.proto.ProtoExposee)
      ProtoExposeeOrBuilder {
    // Use ProtoExposee.newBuilder() to construct.
    private ProtoExposee(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtoExposee() {
      key_ = com.google.protobuf.ByteString.EMPTY;
      onset_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProtoExposee(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              key_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              onset_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.dpppt.backend.sdk.model.proto.Exposed.internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposee_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.dpppt.backend.sdk.model.proto.Exposed.internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposee_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.class, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder.class);
    }

    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString key_;
    /**
     * <code>required bytes key = 2;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes key = 2;</code>
     */
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }

    public static final int ONSET_FIELD_NUMBER = 3;
    private long onset_;
    /**
     * <code>required int64 onset = 3;</code>
     */
    public boolean hasOnset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 onset = 3;</code>
     */
    public long getOnset() {
      return onset_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOnset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, onset_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, onset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee)) {
        return super.equals(obj);
      }
      org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee other = (org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee) obj;

      boolean result = true;
      result = result && (hasKey() == other.hasKey());
      if (hasKey()) {
        result = result && getKey()
            .equals(other.getKey());
      }
      result = result && (hasOnset() == other.hasOnset());
      if (hasOnset()) {
        result = result && (getOnset()
            == other.getOnset());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKey()) {
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
      }
      if (hasOnset()) {
        hash = (37 * hash) + ONSET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOnset());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.dpppt.backend.sdk.model.proto.ProtoExposee}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.dpppt.backend.sdk.model.proto.ProtoExposee)
        org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposeeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.dpppt.backend.sdk.model.proto.Exposed.internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposee_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.dpppt.backend.sdk.model.proto.Exposed.internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposee_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.class, org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.Builder.class);
      }

      // Construct using org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        key_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.dpppt.backend.sdk.model.proto.Exposed.internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposee_descriptor;
      }

      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee getDefaultInstanceForType() {
        return org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.getDefaultInstance();
      }

      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee build() {
        org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee buildPartial() {
        org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee result = new org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.onset_ = onset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee) {
          return mergeFrom((org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee other) {
        if (other == org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasOnset()) {
          setOnset(other.getOnset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          return false;
        }
        if (!hasOnset()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes key = 2;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes key = 2;</code>
       */
      public com.google.protobuf.ByteString getKey() {
        return key_;
      }
      /**
       * <code>required bytes key = 2;</code>
       */
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes key = 2;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }

      private long onset_ ;
      /**
       * <code>required int64 onset = 3;</code>
       */
      public boolean hasOnset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 onset = 3;</code>
       */
      public long getOnset() {
        return onset_;
      }
      /**
       * <code>required int64 onset = 3;</code>
       */
      public Builder setOnset(long value) {
        bitField0_ |= 0x00000002;
        onset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 onset = 3;</code>
       */
      public Builder clearOnset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        onset_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.dpppt.backend.sdk.model.proto.ProtoExposee)
    }

    // @@protoc_insertion_point(class_scope:org.dpppt.backend.sdk.model.proto.ProtoExposee)
    private static final org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee();
    }

    public static org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ProtoExposee>
        PARSER = new com.google.protobuf.AbstractParser<ProtoExposee>() {
      public ProtoExposee parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ProtoExposee(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProtoExposee> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoExposee> getParserForType() {
      return PARSER;
    }

    public org.dpppt.backend.sdk.model.proto.Exposed.ProtoExposee getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposedList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposedList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposee_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposee_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rexposed.proto\022,org.dpppt.android.sdk.i" +
      "nternal.backend.proto\"_\n\020ProtoExposedLis" +
      "t\022K\n\007exposed\030\001 \003(\0132:.org.dpppt.android.s" +
      "dk.internal.backend.proto.ProtoExposee\"*" +
      "\n\014ProtoExposee\022\013\n\003key\030\002 \002(\014\022\r\n\005onset\030\003 \002" +
      "(\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposedList_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposedList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposedList_descriptor,
        new java.lang.String[] { "Exposed", });
    internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposee_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposee_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_dpppt_android_sdk_internal_backend_proto_ProtoExposee_descriptor,
        new java.lang.String[] { "Key", "Onset", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}